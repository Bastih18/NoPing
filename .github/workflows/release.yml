name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Version tag (e.g., v1.0.0, v2.1.3)"
        required: true
  push:
    tags:
      - "v[1-9]*.*.*"  # Only trigger on v1.x.x or higher

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: |
          # Set the correct file extension for Windows
          EXT=""
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            EXT=".exe"
          fi
          
          # Build the binary with the correct name
          OUTPUT="noping-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o $OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: noping-${{ matrix.goos }}-${{ matrix.goarch }}
          path: noping-${{ matrix.goos }}-${{ matrix.goarch }}*
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename and Prepare Artifacts
        run: |
          cd artifacts
          for file in noping-*; do
            chmod +x "$file"  # Ensure executables have correct permissions
          done

      - name: Generate Changelog
        run: |
          git fetch --tags  # Ensure all tags are available
          PREV_TAG=$(git tag --sort=-v:refname | sed -n 2p)  # Get previous tag
          CURR_TAG=${{ github.event.inputs.tag || github.ref_name }}

          if [[ -z "$PREV_TAG" ]]; then
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)  # Fallback to first commit
          fi

          echo "## Changelog" > RELEASE_NOTES.md
          git log --pretty=format:"- %s" "$PREV_TAG"..HEAD >> RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: Release ${{ github.event.inputs.tag || github.ref_name }}
          body_path: RELEASE_NOTES.md  # âœ… Adds changelog to the release description
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
